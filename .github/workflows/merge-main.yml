name: Merge PR to main

permissions:
  contents: read

on:
  pull_request:
    types:
      - closed
      # - opened
      # - reopened
      # - synchronize
    branches:
      - main
# on:
#   pull_request:
#     types:
#       - opened
#       - synchronize # Optional: to trigger on PR updates too
#     branches:
#       - development

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write

    if: github.event.pull_request.merged == true  # Ensure the PR was merged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies for Semantic Versioning
        run: |
          python -m pip install --upgrade pip
          pip install tomli tomli-w

      - name: Get Base and Latest Commits of the Merged PR
        id: commit-range
        run: |
          # Get the base commit of the PR (the commit where it diverged from the main branch)
          BASE_COMMIT=$(git merge-base HEAD^ origin/main)

          # Get the commits introduced by this PR
          COMMITS=$(git rev-list --reverse $BASE_COMMIT..HEAD)

          # Extract the first and last commits
          FIRST_COMMIT=$(echo "$COMMITS" | head -n 1)
          LATEST_COMMIT=$(echo "$COMMITS" | tail -n 1)

          # Set outputs for later steps
          echo "base_commit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "first_commit=$FIRST_COMMIT" >> $GITHUB_OUTPUT
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT

          # Log for debugging
          echo "Base Commit: $BASE_COMMIT"
          echo "First Commit in PR: $FIRST_COMMIT"
          echo "Latest Commit in PR: $LATEST_COMMIT"

# jobs:
#   release:
#     if: github.event.pull_request.merged == true
#     runs-on: ubuntu-latest
#     concurrency: release
#     permissions:
#       contents: write
#     # Map a step output to a job output
#     outputs:
#       released: ${{ steps.release.outputs.released }}
#       tag: ${{ steps.release.outputs.tag }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
#         with:
#           fetch-depth: 0

#       - name: Setup Python version
#         uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
#         with:
#           python-version: '3.11'

#       - name: Python Semantic Release
#         id: release
#         uses: python-semantic-release/python-semantic-release@c82bd673c30da94a02e039963c8c4c8a51758096 # v9.1.1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
